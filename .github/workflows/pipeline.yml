name: Build and Push workflow

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

env:
  TERM: xterm

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.prep.outputs.env }}
    steps:
      - name: check environment and set image tag
        id: prep
        run: |
          REPO_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}
          case "${{ github.ref_name }}" in
            dev)
              echo 'env=["dev"]' >> $GITHUB_OUTPUT 
              ;;
            main)
              echo 'env=["stg", "prod"]' >> $GITHUB_OUTPUT 
              ;;
            *)
              echo -n "Unknown environment ${{ github.ref_name }}"
              exit 1
              ;;
          esac

  build-push:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env: ${{ fromJson(needs.prepare.outputs.env) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to ACR
        uses: docker/login-action@v3.1.0
        with:
          registry: noves.azurecr.io
          username: ${{ secrets.ACR_USER }}
          password: ${{ secrets.ACR_PASS }}

      - name: build and push
        run: |
          REPO_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}
          SHA=${GITHUB_SHA::8}
          TS=$(date +%s)
          for file in $(ls -1 ./configs/$1)
          do
              rm -f .env
              cp ./configs/$1/$file .env
              docker build . -t "noves.azurecr.io/${REPO_NAME}:${{ matrix.env }}-${SHA}-${TS}"
              docker push "noves.azurecr.io/${REPO_NAME}:${{ matrix.env }}-${SHA}-${TS}"
          done
